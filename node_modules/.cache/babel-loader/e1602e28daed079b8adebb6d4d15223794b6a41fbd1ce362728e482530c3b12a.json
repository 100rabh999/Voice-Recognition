{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Voice-Recognition/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSpeechRecognition } from 'react-speech-recognition';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [listening, setListening] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const commands = [{\n    command: 'reset',\n    callback: _ref => {\n      let {\n        resetTranscript\n      } = _ref;\n      return resetTranscript();\n    }\n  }, {\n    command: 'clear',\n    callback: _ref2 => {\n      let {\n        resetTranscript\n      } = _ref2;\n      return resetTranscript();\n    }\n  }, {\n    command: 'open *',\n    callback: site => {\n      window.open('http://' + site);\n    }\n  }, {\n    command: 'increase text size',\n    callback: () => {\n      document.getElementById('cont').style.fontSize = '30px';\n    }\n  }, {\n    command: 'decrease text size',\n    callback: () => {\n      document.getElementById('cont').style.fontSize = '10px';\n    }\n  }, {\n    command: 'change text colour to *',\n    callback: color => {\n      document.getElementById('cont').style.color = color;\n    }\n  }];\n  const toggleListening = () => {\n    if (!listening) {\n      SpeechRecognition.startListening({\n        continuous: true,\n        language: 'en-IN'\n      });\n    } else {\n      SpeechRecognition.stopListening();\n    }\n    setListening(!listening);\n  };\n  const handleInputChange = event => {\n    setTranscript(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Speak something to write..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Some of the commands to use in the speech recognition..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Open *: To open the browser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Reset : To reset the transcript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Clear : To clear the transcript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Increase text size : To increase text size of the transcript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Decrease text size : To decrease text size of the transcript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Change text colour to * :To change text colour to * of the transcript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"cont\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: transcript,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleListening,\n      children: [listening ? 'Stop' : 'Start', \" Listening\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"3F8bD52IlPjjf1wZ8r3pBFe4Ma8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useSpeechRecognition","jsxDEV","_jsxDEV","App","_s","listening","setListening","transcript","setTranscript","commands","command","callback","_ref","resetTranscript","_ref2","site","window","open","document","getElementById","style","fontSize","color","toggleListening","SpeechRecognition","startListening","continuous","language","stopListening","handleInputChange","event","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/apple/Voice-Recognition/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSpeechRecognition } from 'react-speech-recognition';\nimport './App.css';\n\nconst App = () => {\n  const [listening, setListening] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  \n  const commands = [\n    {\n      command: 'reset',\n      callback: ({ resetTranscript }) => resetTranscript()\n    },\n    {\n      command: 'clear',\n      callback: ({ resetTranscript }) => resetTranscript()\n    },\n    {\n      command: 'open *',\n      callback: (site) => { window.open('http://' + site) }\n    },\n    {\n      command: 'increase text size',\n      callback: () => {document.getElementById('cont').style.fontSize = '30px'}\n    },\n    {\n      command: 'decrease text size',\n      callback: () => {document.getElementById('cont').style.fontSize = '10px'}\n    },\n    {\n      command: 'change text colour to *',\n      callback: (color) => {document.getElementById('cont').style.color =  color}\n    }\n  ];\n\n\n\n  const toggleListening = () => {\n    if (!listening) {\n      SpeechRecognition.startListening({ continuous: true, language:'en-IN' });\n    } else {\n      SpeechRecognition.stopListening();\n    }\n    setListening(!listening);\n  };\n\n  const handleInputChange = (event) => {\n    setTranscript(event.target.value);\n  };\n\n  return (\n    <div className='container'>\n      <div className='navbar'>\n        <h1>Speak something to write..</h1>\n        <h2>Some of the commands to use in the speech recognition..</h2>\n        <ul>\n          <li>Open *: To open the browser</li>\n          <li>Reset : To reset the transcript</li>\n          <li>Clear : To clear the transcript</li>\n          <li>Increase text size : To increase text size of the transcript</li>\n          <li>Decrease text size : To decrease text size of the transcript</li>\n          <li>Change text colour to * :To change text colour to * of the transcript</li>\n        </ul>\n      </div>\n      <br/>\n      <div id='cont'>\n        <textarea value={transcript} onChange={handleInputChange} />\n      </div>\n      <button onClick={toggleListening}>{listening ? 'Stop' : 'Start'} Listening</button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}