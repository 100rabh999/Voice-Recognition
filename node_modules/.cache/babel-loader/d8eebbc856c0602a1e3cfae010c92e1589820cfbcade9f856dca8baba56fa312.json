{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Voice-Recognition/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { useSpeechSynthesis } from 'react-speech-kit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [listening, setListening] = useState(false);\n  const {\n    transcript,\n    resetTranscript\n  } = useSpeechRecognition();\n  const {\n    speak\n  } = useSpeechSynthesis();\n  const toggleListening = () => {\n    if (!listening) {\n      SpeechRecognition.startListening({\n        continuous: true,\n        language: 'en-IN'\n      });\n    } else {\n      SpeechRecognition.stopListening();\n    }\n    setListening(!listening);\n  };\n  const speakText = text => {\n    speak({\n      text\n    });\n  };\n  const handleInputChange = event => {\n    resetTranscript();\n    // No need to speak immediately when typing\n  };\n\n  const handleSpeakClick = () => {\n    // Speak the current transcript\n    speakText(transcript);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Voice Recognition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleListening,\n        children: [listening ? 'Stop' : 'Start', \" Listening\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTranscript,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSpeakClick,\n        disabled: !transcript,\n        children: \"Speak\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-area-container\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"text-area\",\n        value: transcript,\n        onChange: handleInputChange,\n        placeholder: \"Speak or type here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"lHfFCgccgruJTbNzO31fWDljy8Y=\", false, function () {\n  return [useSpeechRecognition, useSpeechSynthesis];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SpeechRecognition","useSpeechRecognition","useSpeechSynthesis","jsxDEV","_jsxDEV","App","_s","listening","setListening","transcript","resetTranscript","speak","toggleListening","startListening","continuous","language","stopListening","speakText","text","handleInputChange","event","handleSpeakClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","value","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/apple/Voice-Recognition/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { useSpeechSynthesis } from 'react-speech-kit';\n\nconst App = () => {\n  const [listening, setListening] = useState(false);\n  const { transcript, resetTranscript } = useSpeechRecognition();\n  const { speak } = useSpeechSynthesis();\n\n  const toggleListening = () => {\n    if (!listening) {\n      SpeechRecognition.startListening({ continuous: true, language: 'en-IN' });\n    } else {\n      SpeechRecognition.stopListening();\n    }\n    setListening(!listening);\n  };\n\n  const speakText = (text) => {\n    speak({ text });\n  };\n\n  const handleInputChange = (event) => {\n    resetTranscript();\n    // No need to speak immediately when typing\n  };\n\n  const handleSpeakClick = () => {\n    // Speak the current transcript\n    speakText(transcript);\n  };\n\n  return (\n    <div className='container'>\n      <h1>Voice Recognition</h1>\n      <div className=\"controls\">\n        <button onClick={toggleListening}>{listening ? 'Stop' : 'Start'} Listening</button>\n        <button onClick={resetTranscript}>Reset</button>\n        <button onClick={handleSpeakClick} disabled={!transcript}>Speak</button>\n      </div>\n      <div className=\"text-area-container\">\n        <textarea className=\"text-area\" value={transcript} onChange={handleInputChange} placeholder=\"Speak or type here...\" />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,iBAAiB,IAAIC,oBAAoB,QAAQ,0BAA0B;AAClF,SAASC,kBAAkB,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAAEU,UAAU;IAAEC;EAAgB,CAAC,GAAGT,oBAAoB,EAAE;EAC9D,MAAM;IAAEU;EAAM,CAAC,GAAGT,kBAAkB,EAAE;EAEtC,MAAMU,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAACL,SAAS,EAAE;MACdP,iBAAiB,CAACa,cAAc,CAAC;QAAEC,UAAU,EAAE,IAAI;QAAEC,QAAQ,EAAE;MAAQ,CAAC,CAAC;IAC3E,CAAC,MAAM;MACLf,iBAAiB,CAACgB,aAAa,EAAE;IACnC;IACAR,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,MAAMU,SAAS,GAAIC,IAAI,IAAK;IAC1BP,KAAK,CAAC;MAAEO;IAAK,CAAC,CAAC;EACjB,CAAC;EAED,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnCV,eAAe,EAAE;IACjB;EACF,CAAC;;EAED,MAAMW,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;IACAJ,SAAS,CAACR,UAAU,CAAC;EACvB,CAAC;EAED,oBACEL,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBnB,OAAA;MAAAmB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC1BvB,OAAA;MAAKkB,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBnB,OAAA;QAAQwB,OAAO,EAAEhB,eAAgB;QAAAW,QAAA,GAAEhB,SAAS,GAAG,MAAM,GAAG,OAAO,EAAC,YAAU;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACnFvB,OAAA;QAAQwB,OAAO,EAAElB,eAAgB;QAAAa,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAChDvB,OAAA;QAAQwB,OAAO,EAAEP,gBAAiB;QAACQ,QAAQ,EAAE,CAACpB,UAAW;QAAAc,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpE,eACNvB,OAAA;MAAKkB,SAAS,EAAC,qBAAqB;MAAAC,QAAA,eAClCnB,OAAA;QAAUkB,SAAS,EAAC,WAAW;QAACQ,KAAK,EAAErB,UAAW;QAACsB,QAAQ,EAAEZ,iBAAkB;QAACa,WAAW,EAAC;MAAuB;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACrB,EAAA,CAzCID,GAAG;EAAA,QAEiCJ,oBAAoB,EAC1CC,kBAAkB;AAAA;AAAA+B,EAAA,GAHhC5B,GAAG;AA2CT,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}