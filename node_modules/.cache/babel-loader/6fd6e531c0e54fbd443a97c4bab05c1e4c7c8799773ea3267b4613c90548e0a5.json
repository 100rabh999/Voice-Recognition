{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Voice-Recognition/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMicrophone } from '@fortawesome/free-solid-svg-icons';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { useSpeechSynthesis } from 'react-speech-kit';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [listening, setListening] = useState(false);\n  const {\n    transcript,\n    resetTranscript\n  } = useSpeechRecognition();\n  const {\n    speak\n  } = useSpeechSynthesis();\n  const [sentence, setSentence] = useState('');\n  const toggleListening = () => {\n    if (!listening) {\n      SpeechRecognition.startListening({\n        continuous: true,\n        language: 'en-IN'\n      });\n    } else {\n      SpeechRecognition.stopListening();\n    }\n    setListening(!listening);\n  };\n  const speakTranscript = () => {\n    speak({\n      text: transcript\n    });\n  };\n  const speakSentence = () => {\n    speak({\n      text: sentence\n    });\n  };\n  const handleInputChange = event => {\n    resetTranscript();\n    setSentence(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Voice Recognition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleListening,\n        className: listening ? 'listening' : ' button',\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faMicrophone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), listening ? 'Stop ' : 'Start']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTranscript,\n        className: \"button secondary\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: speakTranscript,\n        disabled: !transcript,\n        className: \"button danger\",\n        children: \"Replay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-area-container\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"text-area\",\n        value: transcript,\n        onChange: handleInputChange,\n        placeholder: \"Speak or type here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: speakSentence,\n      disabled: !sentence,\n      className: \"button primary\",\n      children: \"Speak\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-box\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: sentence,\n        onChange: handleInputChange,\n        placeholder: \"Enter a sentence to speak\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"UiY1bpMeRPeOyZphfif3lwAC0Gk=\", false, function () {\n  return [useSpeechRecognition, useSpeechSynthesis];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faMicrophone","SpeechRecognition","useSpeechRecognition","useSpeechSynthesis","jsxDEV","_jsxDEV","App","_s","listening","setListening","transcript","resetTranscript","speak","sentence","setSentence","toggleListening","startListening","continuous","language","stopListening","speakTranscript","text","speakSentence","handleInputChange","event","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","disabled","onChange","placeholder","type","_c","$RefreshReg$"],"sources":["/Users/apple/Voice-Recognition/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMicrophone } from '@fortawesome/free-solid-svg-icons';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { useSpeechSynthesis } from 'react-speech-kit';\nimport './styles.css';\n\nconst App = () => {\n  const [listening, setListening] = useState(false);\n  const { transcript, resetTranscript } = useSpeechRecognition();\n  const { speak } = useSpeechSynthesis();\n  const [sentence, setSentence] = useState('');\n\n  const toggleListening = () => {\n    if (!listening) {\n      SpeechRecognition.startListening({ continuous: true, language: 'en-IN' });\n    } else {\n      SpeechRecognition.stopListening();\n    }\n    setListening(!listening);\n  };\n\n  const speakTranscript = () => {\n    speak({ text: transcript });\n  };\n\n  const speakSentence = () => {\n    speak({ text: sentence });\n  };\n\n  const handleInputChange = (event) => {\n    resetTranscript();\n    setSentence(event.target.value);\n  };\n\n  return (\n    <div className='container'>\n      <h1>Voice Recognition</h1>\n      <div className=\"controls\">\n        <button onClick={toggleListening} className={listening ? 'listening' : ' button'} >\n          <FontAwesomeIcon icon={faMicrophone} />\n          {listening ? 'Stop ' : 'Start'}\n        </button>\n        <button onClick={resetTranscript} className=\"button secondary\">Reset</button>\n        <button onClick={speakTranscript} disabled={!transcript} className=\"button danger\">Replay</button>\n        \n      </div>\n      <div className=\"text-area-container\">\n        <textarea className=\"text-area\" value={transcript} onChange={handleInputChange} placeholder=\"Speak or type here...\" />\n      </div>\n      <button onClick={speakSentence} disabled={!sentence} className=\"button primary\">Speak</button>\n      <div className=\"input-box\">\n        <input type=\"text\" value={sentence} onChange={handleInputChange} placeholder=\"Enter a sentence to speak\" />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}