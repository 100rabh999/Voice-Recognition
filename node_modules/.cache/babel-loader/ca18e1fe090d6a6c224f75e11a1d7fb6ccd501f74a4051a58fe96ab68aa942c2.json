{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Voice-Recognition/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport SpeechRecognitionButton from './components/SpeechRecognitionButton';\nimport TextToSpeechButton from './components/TextToSpeechButton';\nimport InputBox from './components/InputBox';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [listening, setListening] = useState(false);\n  const {\n    transcript,\n    resetTranscript\n  } = useSpeechRecognition();\n  const [sentence, setSentence] = useState('');\n  const toggleListening = () => {\n    if (!listening) {\n      SpeechRecognition.startListening({\n        continuous: true,\n        language: 'en-IN'\n      });\n    } else {\n      SpeechRecognition.stopListening();\n    }\n    setListening(!listening);\n  };\n  const speakSentence = () => {\n    speak({\n      text: sentence\n    });\n  };\n  const handleInputChange = event => {\n    resetTranscript();\n    setSentence(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Voice Recognition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(SpeechRecognitionButton, {\n        listening: listening,\n        toggleListening: toggleListening\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTranscript,\n        className: \"button secondary\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextToSpeechButton, {\n        text: transcript,\n        disabled: !transcript,\n        onClick: speakSentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-area-container\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"text-area\",\n        value: transcript,\n        onChange: handleInputChange,\n        placeholder: \"Speak or type here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextToSpeechButton, {\n      text: sentence,\n      disabled: !sentence,\n      onClick: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n      value: sentence,\n      onChange: handleInputChange,\n      placeholder: \"Enter a sentence to speak\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"M2U6O4nQZYWUya+H84BuoR9xKtM=\", true);\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SpeechRecognitionButton","TextToSpeechButton","InputBox","jsxDEV","_jsxDEV","App","_s","listening","setListening","transcript","resetTranscript","useSpeechRecognition","sentence","setSentence","toggleListening","SpeechRecognition","startListening","continuous","language","stopListening","speakSentence","speak","text","handleInputChange","event","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/apple/Voice-Recognition/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport SpeechRecognitionButton from './components/SpeechRecognitionButton';\nimport TextToSpeechButton from './components/TextToSpeechButton';\nimport InputBox from './components/InputBox';\nimport './styles.css';\n\nconst App = () => {\n  const [listening, setListening] = useState(false);\n  const { transcript, resetTranscript } = useSpeechRecognition();\n  const [sentence, setSentence] = useState('');\n\n  const toggleListening = () => {\n    if (!listening) {\n      SpeechRecognition.startListening({ continuous: true, language: 'en-IN' });\n    } else {\n      SpeechRecognition.stopListening();\n    }\n    setListening(!listening);\n  };\n\n  const speakSentence = () => {\n    speak({ text: sentence });\n  };\n\n  const handleInputChange = (event) => {\n    resetTranscript();\n    setSentence(event.target.value);\n  };\n\n  return (\n    <div className='container'>\n      <h1>Voice Recognition</h1>\n      <div className=\"controls\">\n        <SpeechRecognitionButton listening={listening} toggleListening={toggleListening} />\n        <button onClick={resetTranscript} className=\"button secondary\">Reset</button>\n        <TextToSpeechButton text={transcript} disabled={!transcript} onClick={speakSentence} />\n      </div>\n      <div className=\"text-area-container\">\n        <textarea className=\"text-area\" value={transcript} onChange={handleInputChange} placeholder=\"Speak or type here...\" />\n      </div>\n      <TextToSpeechButton text={sentence} disabled={!sentence} onClick={() => {}} />\n      <InputBox value={sentence} onChange={handleInputChange} placeholder=\"Enter a sentence to speak\" />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}